<?php
/**
 * @file
 * Code for the Teaser Facebook feature.
 */

include_once 'teaser_facebook.features.inc';

/**
 * Implements hook_teaser_types().
 */
function teaser_facebook_teaser_types() {
  return array(
    'teaser_facebook' => 1,
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function teaser_facebook_field_formatter_info() {
  return array(
    'teaser_facebook_likebox' => array(
      'label' => t('Facebook likebox'),
      'field types' => array('text'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function teaser_facebook_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'teaser_facebook_likebox':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#markup' => teaser_facebook_likebox_render($item['value']),
        );
      }
      break;
  }

  return $element;
}

/**
 * Render a facebook likebox widget.
 */
function teaser_facebook_likebox_render($page) {
  $output = theme('fb_likebox_facebook', array(
    'fb_url' => 'https://www.facebook.com/' . $page,
    'fb_colorscheme' => variable_get('fb_likebox_colorscheme', 'light'),
    'fb_header' => variable_get('fb_likebox_header', 'false'),
    'fb_stream' => variable_get('fb_likebox_stream', 'true'),
    'fb_show_faces' => variable_get('fb_likebox_show_faces', 'false'),
    'fb_scrolling' => variable_get('fb_likebox_scrolling', 'yes'),
    'fb_width' => variable_get('fb_likebox_width', '400'),
    'fb_height' => variable_get('fb_likebox_height', '224'),
    'fb_show_border' => variable_get('fb_likebox_show_border', 'false'),
    'fb_force_wall' => variable_get('fb_likebox_force_wall', 'false'),
  ));
  return $output;
}
